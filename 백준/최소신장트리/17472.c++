#include <iostream>

using namespace std;

int N,M;
int graph[10][10] = {0};

void input() {
  cin >> N >> M;
  for(int i=0;i<N;i++) {
    for(int j=0;j<M;j++) {
      cin >> graph[i][j];
    }
  }
}

int main()
{
  input();
}

/*

조건이 많고 까다롭다...

1. 모든 섬들간의 다리를 알아낸다.

- 1) 모든지점에서 bfs수행하여 섬들마다 별도의 값을 매긴다.
- 2) 모든지점에서 가로or세로방향으로 bfs수행하여 다리를 알아낸다.
- 2) 이때 다리의 길이는 min값으로 업데이트한다.

2. 크루스칼 알고리즘을 적용한다.

-> 크루스칼 알고리즘은 인접리스트일때 효율적인데 지금은 그래프가 리스트형태가 아님.
-> 차라리 프림 알고리즘을 쓰는 것이 좋을 듯 함.

3. 그래프크기가 100인것으로 보아 브루트포스를 돌리는듯.

*/
